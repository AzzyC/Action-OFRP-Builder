name: Recovery Build

on:
  workflow_dispatch:

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    env:
      SYNC_URL: https://gitlab.com/OrangeFox/sync.git
      MANIFEST_BRANCH: 12.1
      DEVICE_TREE_URL: https://github.com/AzzyC/ofox_device_xiaomi_peridot
      DEVICE_TREE_BRANCH: main
      DEVICE_PATH: device/xiaomi/peridot
      DEVICE_NAME: peridot
      MAKEFILE_NAME: twrp_peridot
      BUILD_TARGET: recovery

    steps:

    # You might want to Checkout your repo first, but not mandatory
    - name: Check Out
      uses: actions/checkout@v4

    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Create Telegram sender script
      run: |
        cat <<'EOF' > /tmp/send_msg.sh
        #!/bin/bash
        MSG="$1"
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="$MSG" \
          -d parse_mode="Markdown"
        EOF
        chmod +x /tmp/send_msg.sh

    - name: Initialize workspace
      run: |
        /tmp/send_msg.sh "üöÄ *Starting OrangeFox build* for \`${{ env.DEVICE_NAME }}\` (\`${{ env.MANIFEST_BRANCH }}\`)"
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
      id: pwd

    - name: Prepare the build environment
      run: |
        /tmp/send_msg.sh "üß© Preparing build environment..."
        sudo apt update && sudo apt upgrade -y
        DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
            linux-modules-extra-$(uname -r) \
            git python3 tar aria2
        git clone https://gitlab.com/OrangeFox/misc/scripts
        cd scripts
        sudo bash setup/android_build_env.sh
        sed -i 's/cd -/cd ../g' setup/install_android_sdk.sh
        sudo bash setup/install_android_sdk.sh
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Install OpenJDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Sync OrangeFox sources and minimal manifest
      run: |
        /tmp/send_msg.sh "üåê Syncing OrangeFox sources..."
        cd ${{ steps.pwd.outputs.workspace-folder }}
        git clone ${{ env.SYNC_URL }}
        cd sync
        ./orangefox_sync.sh --branch ${{ env.MANIFEST_BRANCH }} --path ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ env.MANIFEST_BRANCH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Clone device tree
      run: |
        /tmp/send_msg.sh "üå≤ Cloning device tree for \`${{ env.DEVICE_NAME }}\`..."
        cd ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ env.MANIFEST_BRANCH }}
        git clone ${{ env.DEVICE_TREE_URL }} -b ${{ env.DEVICE_TREE_BRANCH }} ./${{ env.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Building recovery
      run: |
        /tmp/send_msg.sh "‚öôÔ∏è Starting build for \`${{ env.DEVICE_NAME }}\`..."
        cd ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ env.MANIFEST_BRANCH }}
        set +e
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        set -e
        lunch ${{ env.MAKEFILE_NAME }}-eng && make clean && mka adbd ${{ env.BUILD_TARGET }}image -j$(nproc --all)
        /tmp/send_msg.sh "‚úÖ Build completed successfully for \`${{ env.DEVICE_NAME }}\`"
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      continue-on-error: true

    - name: Check the output directory before uploading
      run: |
        /tmp/send_msg.sh "üßæ Checking output directory..."
        ls -al ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ env.MANIFEST_BRANCH }}/out/target/product/
        echo
        ls -al ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ env.MANIFEST_BRANCH }}/out/target/product/${{ env.DEVICE_NAME }}/

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ env.MANIFEST_BRANCH }}/out/target/product/${{ env.DEVICE_NAME }}/recovery.img
          ${{ steps.pwd.outputs.workspace-folder }}/fox_${{ env.MANIFEST_BRANCH }}/out/target/product/${{ env.DEVICE_NAME }}/OrangeFox-R*.zip
        name: ${{ env.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ env.MANIFEST_BRANCH }}
          Device: ${{ env.DEVICE_NAME }}
          Target: ${{ env.BUILD_TARGET }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify Release
      run: |
        RELEASE_URL="https://github.com/${{ github.repository }}/releases/latest"
        /tmp/send_msg.sh "üì¶ *Build complete!* [Download OrangeFox-R11.3-Unofficial-peridot.zip]($RELEASE_URL)"
